{"version":3,"sources":["components/MostrarError.js","components/Presupuesto.js","components/Formulario.js","components/Gasto.js","components/ListadoDeGastos.js","helpers/revisarPresupuesto.js","components/ControlPresupuesto.js","components/AppGastoSemanal.js","App.js","index.js"],"names":["MostrarError","mensaje","className","Presupuesto","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","ListadoDeGastos","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","AppGastoSemanal","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3b3af5d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MostrarError = ({mensaje}) => {\r\n    return (\r\n        <p className=\"alert alert-danger error\"> {mensaje} </p>\r\n    )\r\n}\r\n\r\n\r\nMostrarError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { MostrarError } from './MostrarError';\r\n\r\n\r\nconst Presupuesto = ({ guardarPresupuesto, guardarRestante, actualizarPregunta }) => {\r\n\r\n    // Definir el State\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Función que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad( parseInt(e.target.value, 10) );\r\n    }\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if ( cantidad < 1 || isNaN(cantidad) ) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // Si pasa la validación\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Indica tu presupuesto</h2>\r\n\r\n            { error ? <MostrarError mensaje=\"El presupuesto es incorrecto\"/> : null }\r\n\r\n            <form onSubmit={agregarPresupuesto}>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Indica tu presupuesto\"\r\n                    onChange={definirPresupuesto}    \r\n                />\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir presupuesto\"\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Presupuesto;\r\n\r\n\r\nPresupuesto.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}","import React, { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { MostrarError } from './MostrarError';\r\n\r\n\r\nexport const Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n  \r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Función que guarda el nombre del gasto\r\n    const definirNombre = e => {\r\n        guardarNombre( e.target.value );\r\n    }\r\n\r\n    // Función que guarda la cantidad del gasto\r\n    const definirCantidad = e => {\r\n        guardarCantidad( parseInt(e.target.value, 10) || 0);\r\n    }\r\n\r\n    // Submit para definir el gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if ( cantidad < 1 || isNaN(cantidad) || nombre.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // Si pasa la validación\r\n        guardarError(false);\r\n        \r\n        // Construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        // Pasar el gasto al componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        // Resetear el formulairo\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={agregarGasto}>\r\n            <h2>Inserta tus gastos aquí</h2>\r\n\r\n            { error ? <MostrarError mensaje=\"Falta el concepto o el valor es incorrecto.\"/> : null }\r\n\r\n            <div className=\"campo\">\r\n                <label>Concepto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"EJ. Transporte\"\r\n                    value={nombre}\r\n                    onChange={definirNombre}\r\n                />\r\n            </div>\r\n             <div className=\"campo\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"EJ. 300\"\r\n                    value={cantidad}\r\n                    onChange={definirCantidad}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Añadir gasto\"\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Gasto = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n            <span className=\"gasto\">{gasto.cantidad} €</span>\r\n        </p>\r\n    </li>\r\n)\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Gasto } from './Gasto';\r\n\r\n\r\nexport const ListadoDeGastos = ({gastos}) => {\r\n    return (\r\n        <div className=\"gastos-realizados\">\r\n            <h2>Lista de gastos</h2>\r\n            {gastos.map(gasto => (\r\n                <Gasto\r\n                    key={gasto.id}\r\n                    gasto={gasto}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nListadoDeGastos.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}","\nexport const revisarPresupuesto = (presupuesto, restante) => {\n\n    let clase;\n\n    if ( (presupuesto / 4) > restante ) {\n        clase = 'alert alert-danger';\n    } else if ( (presupuesto / 2) > restante ) {\n        clase = 'alert alert-warning';\n    } else {\n        clase = 'alert alert-success';\n    }\n\n    return clase;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {revisarPresupuesto} from '../helpers/revisarPresupuesto';\n\nexport const ControlPresupuesto = ( {presupuesto, restante} ) => {\n    return (\n        <>\n            <div className=\"alert alert-primary\">\n                Presupuesto: {presupuesto} €\n            </div>\n            <div className={revisarPresupuesto(presupuesto, restante)}>\n                Restante: {restante} €\n            </div>\n        </>\n    )\n}\n\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport Presupuesto from './Presupuesto';\r\nimport {Formulario} from './Formulario';\r\nimport {ListadoDeGastos} from './ListadoDeGastos';\r\nimport {ControlPresupuesto} from './ControlPresupuesto';\r\n\r\n\r\nfunction AppGastoSemanal() {\r\n\r\n\t// Definimos los states\r\n\tconst [presupuesto, guardarPresupuesto] = useState(0);\r\n\tconst [restante, guardarRestante] = useState(0);\r\n    const [mostrarPregunta, actualizarPregunta] = useState(true);\r\n    const [gastos, guardarGastos] = useState([]);\r\n    const [gasto, guardarGasto] = useState({});\r\n    const [crearGasto, guardarCrearGasto] = useState(false);\r\n\r\n\r\n    // Detectamos cada vez que cambie el gasto\r\n    // Usefect que actualiza el restante\r\n    useEffect(() => {\r\n        if (crearGasto) {\r\n\r\n            // agrega el nuevo presupuesto\r\n            guardarGastos([\r\n                ...gastos,\r\n                gasto\r\n            ]);\r\n\r\n            // resta del presupuesto actual\r\n            const presupuestoRestante = restante - gasto.cantidad;\r\n            guardarRestante(presupuestoRestante);\r\n\r\n            // Resetear\r\n            guardarCrearGasto(false);\r\n\r\n        }\r\n    }, [gasto, crearGasto, gastos, restante])\r\n\r\n\r\n\r\n\treturn (\r\n\r\n\t\t<div className=\"container\">\r\n\t\t\t<header>\r\n\t\t\t\t<h1>Gasto semanal</h1>\r\n\t\t\t\t<div className=\"contenido-principal contenido\">\r\n                    {/* Mostramos el formulario de forma condicional */} \r\n                    { mostrarPregunta ? \r\n                        (\r\n                            <Presupuesto \r\n                                guardarPresupuesto={guardarPresupuesto}\r\n                                guardarRestante={guardarRestante}\r\n                                actualizarPregunta={actualizarPregunta}\r\n                            />\r\n                        ) : (\r\n                            <div className=\"row\">\r\n                                <div className=\"one-half column\">\r\n                                    <Formulario\r\n                                        guardarGasto={guardarGasto}\r\n                                        guardarCrearGasto={guardarCrearGasto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"one-half column\">\r\n                                    <ListadoDeGastos\r\n                                        gastos={gastos}\r\n                                    />\r\n                                    <ControlPresupuesto\r\n                                        presupuesto={presupuesto}\r\n                                        restante={restante}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        ) \r\n                    }\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t</div>\r\n\r\n\r\n\t);\r\n}\r\n\r\nexport default AppGastoSemanal;\r\n","import React from 'react';\r\n\r\nimport AppGastoSemanal from './components/AppGastoSemanal';\r\n\r\nfunction App() {\r\n\r\n\treturn (\r\n\t\t<AppGastoSemanal />\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}